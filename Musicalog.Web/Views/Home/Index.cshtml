@model PagedList.IPagedList<Musicalog.Web.Models.AlbumViewModel>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Album Name", "Index", new { sortOrder = ViewBag.AlbumSortParam })
        </th>
        <th>
            @Html.ActionLink("Artist", "Index", new { sortOrder = ViewBag.ArtistSortParam })
        </th>
        <th>
           Media Type
        </th>
        <th>
            Label
        </th>
        <th>
            Stock
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AlbumName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Artist)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MediaType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RecordLabel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) 
                @*@Html.ActionLink("Delete", "Delete", new { id=item.Id })*@
            </td>
        </tr>
    }

</table>

<br />

Page @(Model.PageCount < Model.PageNumber?0:Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort}))